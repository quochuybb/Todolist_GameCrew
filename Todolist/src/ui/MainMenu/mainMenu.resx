<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>